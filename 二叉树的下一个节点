题目描述
给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。
注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。

/*
struct TreeLinkNode {
    int val;
    struct TreeLinkNode *left;
    struct TreeLinkNode *right;
    struct TreeLinkNode *next;
    TreeLinkNode(int x) :val(x), left(NULL), right(NULL), next(NULL) {
        
    }
};
*/

class Solution {
public:
    TreeLinkNode* GetNext(TreeLinkNode* pNode)
    {
        TreeLinkNode* nextnode = nullptr;
        //空节点
        if(pNode==nullptr) return nullptr;
        //有右子树
        if(pNode->right != nullptr)
        {
            pNode = pNode->right;
            while(pNode->left!=nullptr) pNode = pNode->left;
            nextnode = pNode;
        }
        //无右子树
        else if(pNode->right==nullptr && pNode->next != nullptr)
        {
            //且该节点是父节点的左节点
            if(pNode->next->left == pNode) 
            {
                nextnode = pNode->next;
            }
            //且该节点是父节点的右节点
            while(pNode->next->right == pNode && pNode->next!=nullptr) 
            {
                pNode = pNode->next;
            }
            nextnode = pNode->next;
        }
        return nextnode;
    }
};
