/*
把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。 例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。
*/
//思路：二分法，看mid值在左边子块还是右边子块
class Solution {
public:
    int minNumberInRotateArray(vector<int> r) {
        int len = r.size();
        int left=0,right=len-1;
        if(r.empty()) return 0;
        while(left<right)
        {
            int mid= left+(right-left)/2;
            if (r[left]<r[right]) return r[left];
            if(r[mid]<r[right])  //5671234 mid值在右边子块中，最小值为mid值或者在mid左边
               {
                   right=mid;
               }
            if(r[mid]>r[left])  //456123 mid值在左边子块中，最小值mid右边
            {
                left=mid+1;
            }
            else
            {
                left+=1;
            }
        }
        return r[left];  
    }    
};
